{"version":3,"sources":["placeholder.png","actions/types.js","actions/userAction.js","actions/modalAction.js","components/UserInfo.js","components/UserGrid.js","components/AddUser.js","components/EditUser.js","components/App.js","serviceWorker.js","reducers/userReducer.js","reducers/modalReducer.js","reducers/index.js","store.js","index.js"],"names":["module","exports","__webpack_require__","p","FETCH_USERS","NEW_USER","EDIT_USER","DELETE_USER","SHOW_MODAL","HIDE_MODAL","SHOW_EDIT_MODAL","HIDE_EDIT_MODAL","fetchUsers","dispatch","type","payload","users","showModal","showEditModal","user","editedUser","hideEditModal","UserInfo","handleEditClick","event","_this","props","this","react_default","a","createElement","Fragment","Col","xs","md","lg","style","marginBottom","Card","Img","variant","src","placeholder","height","Body","Title","first_name","last_name","className","role","Text","phone","email","Button","onClick","Component","connect","state","showEdit","show","UserGrid","Container","Row","map","i","components_UserInfo","Object","assign","key","React","userList","AddUser","handleSubmitClick","preventDefault","refs","addUserForm","postData","id","length","value","addUser","hideModal","Modal","onHide","Header","closeButton","fontSize","Form","ref","Group","controlId","Label","Control","required","Check","label","name","defaultChecked","Footer","EditUser","console","log","editUserForm","editUser","handleDeleteClick","deleteUser","putData","App","span","offset","marginTop","components_UserGrid","components_AddUser","userId","components_EditUser","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","initialState","combineReducers","arguments","undefined","action","objectSpread","concat","toConsumableArray","newList","updatedList","filter","middleware","thunk","data","store","createStore","rootReducer","compose","applyMiddleware","apply","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","components_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fa228501.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/placeholder.4788048f.png\";","export const FETCH_USERS = \"FETCH_USERS\";\r\nexport const NEW_USER = \"NEW_USER\";\r\nexport const EDIT_USER = \"EDIT_USER\";\r\nexport const DELETE_USER = \"DELETE_USER\";\r\nexport const SHOW_MODAL = \"SHOW_MODAL\";\r\nexport const HIDE_MODAL = \"HIDE_MODAL\";\r\nexport const SHOW_EDIT_MODAL = \"SHOW_EDIT_MODAL\";\r\nexport const HIDE_EDIT_MODAL = \"HIDE_EDIT_MODAL\";\r\n","import { FETCH_USERS, NEW_USER, EDIT_USER, DELETE_USER } from \"./types\";\r\nimport users from \"../data.json\";\r\nexport function fetchUsers() {\r\n  return function(dispatch) {\r\n    dispatch({\r\n      type: FETCH_USERS,\r\n      payload: users\r\n    });\r\n  };\r\n}\r\nexport function addUser(postData) {\r\n  return function(dispatch) {\r\n    // fetch(\"https://jsonplaceholder.typicode.com/users\", {\r\n    //   method: \"POST\",\r\n    //   body: postData,\r\n    //   headers: {\r\n    //     \"Content-Type\": \"application/json\"\r\n    //   }\r\n    // })\r\n    //   .then(res => res.json())\r\n    //   .then(user =>\r\n    //     dispatch({\r\n    //       type: NEW_USER,\r\n    //       payload: user\r\n    //     })\r\n    //   );\r\n    dispatch({\r\n      type: NEW_USER,\r\n      payload: postData\r\n    });\r\n  };\r\n}\r\nexport function editUser(putData, id) {\r\n  return function(dispatch) {\r\n    dispatch({\r\n      type: EDIT_USER,\r\n      payload: putData,\r\n      id: id\r\n    });\r\n  };\r\n}\r\nexport function deleteUser(id) {\r\n  return function(dispatch) {\r\n    dispatch({\r\n      type: DELETE_USER,\r\n      id: id\r\n    });\r\n  };\r\n}\r\n","import {\r\n  SHOW_MODAL,\r\n  HIDE_MODAL,\r\n  SHOW_EDIT_MODAL,\r\n  HIDE_EDIT_MODAL\r\n} from \"./types\";\r\nexport function showModal() {\r\n  return function(dispatch) {\r\n    dispatch({\r\n      type: SHOW_MODAL,\r\n      payload: true\r\n    });\r\n  };\r\n}\r\nexport function hideModal() {\r\n  return function(dispatch) {\r\n    dispatch({\r\n      type: HIDE_MODAL,\r\n      payload: false\r\n    });\r\n  };\r\n}\r\nexport function showEditModal(user) {\r\n  return function(dispatch) {\r\n    dispatch({\r\n      type: SHOW_EDIT_MODAL,\r\n      payload: true,\r\n      editedUser: user\r\n    });\r\n  };\r\n}\r\nexport function hideEditModal() {\r\n  return function(dispatch) {\r\n    dispatch({\r\n      type: HIDE_EDIT_MODAL,\r\n      payload: false\r\n    });\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, Button, Col } from \"react-bootstrap\";\r\nimport placeholder from \"../placeholder.png\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { hideEditModal, showEditModal } from \"../actions/modalAction\";\r\nclass UserInfo extends Component {\r\n  handleEditClick = event => {\r\n    this.props.showEditModal(this.props.user);\r\n  };\r\n  render() {\r\n    const { user } = this.props;\r\n    return (\r\n      <>\r\n        <Col xs={12} md={6} lg={4} style={{ marginBottom: \"2%\" }}>\r\n          <Card>\r\n            <Card.Img variant=\"top\" src={placeholder} height=\"100px\" />\r\n            <Card.Body>\r\n              <Card.Title>\r\n                {user.first_name} {user.last_name}{\" \"}\r\n                <span className=\"muted\">\r\n                  {user.role === \"admin\" ? \"(\" + user.role + \")\" : \"\"}\r\n                </span>\r\n              </Card.Title>\r\n              <Card.Text>\r\n                <span>{user.phone}</span>\r\n                <br />\r\n                <span>{user.email}</span>\r\n              </Card.Text>\r\n              <Button variant=\"outline-primary\" onClick={this.handleEditClick}>\r\n                Edit\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </>\r\n    );\r\n  }\r\n}\r\nUserInfo.propTypes = {\r\n  hideEditModal: PropTypes.func.isRequired,\r\n  showEdit: PropTypes.bool.isRequired,\r\n  showEditModal: PropTypes.func.isRequired\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    showEdit: state.show.showEdit\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { hideEditModal, showEditModal }\r\n)(UserInfo);\r\n","import React from \"react\";\r\nimport UserInfo from \"../components/UserInfo\";\r\nimport { Row, Container } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchUsers } from \"../actions/userAction\";\r\nclass UserGrid extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          {this.props.users.map((user, i) => (\r\n            <UserInfo {...this.props} key={i} i={i} user={user} />\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nUserGrid.propTypes = {\r\n  fetchUsers: PropTypes.func.isRequired,\r\n  users: PropTypes.array.isRequired\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    users: state.users.userList\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchUsers }\r\n)(UserGrid);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { showModal, hideModal } from \"../actions/modalAction\";\r\nimport { addUser } from \"../actions/userAction\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddUser extends Component {\r\n  handleSubmitClick = event => {\r\n    event.preventDefault();\r\n    let { role } = this.refs.addUserForm;\r\n    let postData = {\r\n      id: this.props.users.userList.length + 1,\r\n      first_name: this.refs.first_name.value,\r\n      last_name: this.refs.last_name.value,\r\n      phone: this.refs.phone.value,\r\n      email: this.refs.email.value,\r\n      role: role.value\r\n    };\r\n    this.props.addUser(postData);\r\n    this.props.hideModal();\r\n  };\r\n  render() {\r\n    return (\r\n      <Modal show={this.props.show} onHide={this.props.hideModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            Add a Team Member\r\n            <br />\r\n            <label className=\"text-muted\" style={{ fontSize: \"60%\" }}>\r\n              Set email, location and role\r\n            </label>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <Form ref=\"addUserForm\">\r\n            <Form.Group controlId=\"first_name\">\r\n              <Form.Label>First name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"John\"\r\n                ref=\"first_name\"\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"last_name\">\r\n              <Form.Label>Last name</Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"Doe\" ref=\"last_name\" />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"sample@example.com\"\r\n                ref=\"email\"\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"phone\">\r\n              <Form.Label>Phone</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"+1234567890\"\r\n                ref=\"phone\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Check\r\n                type=\"radio\"\r\n                label=\"Regular - Can't delete members\"\r\n                name=\"role\"\r\n                defaultChecked\r\n                value=\"regular\"\r\n              />\r\n              <Form.Check\r\n                type=\"radio\"\r\n                label=\"Admin - Can delete members\"\r\n                name=\"role\"\r\n                value=\"admin\"\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.props.hideModal}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"primary\"\r\n            onClick={this.handleSubmitClick}\r\n          >\r\n            Save\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\nAddUser.propTypes = {\r\n  showModal: PropTypes.func.isRequired,\r\n  hideModal: PropTypes.func.isRequired,\r\n  show: PropTypes.bool.isRequired,\r\n  addUser: PropTypes.func.isRequired\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    show: state.show.show,\r\n    users: state.users\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { showModal, hideModal, addUser }\r\n)(AddUser);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { showEditModal, hideEditModal } from \"../actions/modalAction\";\r\nimport { editUser, deleteUser } from \"../actions/userAction\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass EditUser extends Component {\r\n  handleSubmitClick = event => {\r\n    event.preventDefault();\r\n    console.log(this.props.editedUser.id);\r\n    let { role } = this.refs.editUserForm;\r\n    let postData = {\r\n      id: this.props.editedUser.id,\r\n      first_name: this.refs.first_name.value,\r\n      last_name: this.refs.last_name.value,\r\n      phone: this.refs.phone.value,\r\n      email: this.refs.email.value,\r\n      role: role.value\r\n    };\r\n    this.props.editUser(postData, postData.id);\r\n    this.props.hideEditModal();\r\n  };\r\n  handleDeleteClick = event => {\r\n    event.preventDefault();\r\n    console.log(\"in delete click\");\r\n    this.props.deleteUser(this.props.editedUser.id);\r\n    this.props.hideEditModal();\r\n  };\r\n  render() {\r\n    const user = this.props.editedUser;\r\n    console.log(user.id);\r\n    return (\r\n      <Modal show={this.props.showEdit} onHide={this.props.hideEditModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            Edit {user.first_name}'s Details\r\n            <br />\r\n            <label className=\"text-muted\" style={{ fontSize: \"60%\" }}>\r\n              Set email, location and role\r\n            </label>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <Form ref=\"editUserForm\">\r\n            <Form.Group controlId=\"first_name\">\r\n              <Form.Label>First name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"John\"\r\n                ref=\"first_name\"\r\n                // value={this.props.user.first_name}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"last_name\">\r\n              <Form.Label>Last name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Doe\"\r\n                ref=\"last_name\"\r\n                // value={this.props.user.last_name}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"sample@example.com\"\r\n                ref=\"email\"\r\n                // value={this.props.user.email}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"phone\">\r\n              <Form.Label>Phone</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"+1234567890\"\r\n                // value={this.props.user.phone}\r\n                ref=\"phone\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Check\r\n                type=\"radio\"\r\n                label=\"Regular - Can't delete members\"\r\n                name=\"role\"\r\n                value=\"regular\"\r\n                // checked={this.props.role === \"regular\"}\r\n                // onChange={this.handleOptionChange}\r\n              />\r\n              <Form.Check\r\n                type=\"radio\"\r\n                label=\"Admin - Can delete members\"\r\n                name=\"role\"\r\n                value=\"admin\"\r\n                // checked={this.props.role === \"admin\"}\r\n                // onChange={this.handleOptionChange}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {this.props.editedUser.role === \"admin\" ? (\r\n            <Button variant=\"outline-danger\" onClick={this.handleDeleteClick}>\r\n              Delete\r\n            </Button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"primary\"\r\n            onClick={this.handleSubmitClick}\r\n          >\r\n            Save\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\nEditUser.propTypes = {\r\n  showEditModal: PropTypes.func.isRequired,\r\n  hideEditModal: PropTypes.func.isRequired,\r\n  showEdit: PropTypes.bool.isRequired,\r\n  editUser: PropTypes.func.isRequired,\r\n  deleteUser: PropTypes.func.isRequired,\r\n  editedUser: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    showEdit: state.show.showEdit,\r\n    users: state.users,\r\n    editedUser: state.show.editedUser\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { showEditModal, hideEditModal, editUser, deleteUser }\r\n)(EditUser);\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchUsers } from \"../actions/userAction\";\nimport { showModal } from \"../actions/modalAction\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport UserGrid from \"./UserGrid\";\nimport AddUser from \"./AddUser\";\nimport { hideEditModal, showEditModal } from \"../actions/modalAction\";\nimport EditUser from \"./EditUser\";\nclass App extends Component {\n  componentWillMount() {\n    this.props.fetchUsers();\n  }\n  render() {\n    return (\n      <Container className=\"App\">\n        <Row className=\"justify-content-md-center\">\n          <Col xs={{ span: 2, offset: 10 }} style={{ marginTop: \"2%\" }}>\n            <Button variant=\"primary\" onClick={this.props.showModal}>\n              Add\n            </Button>\n          </Col>\n          <header>\n            <h1>Team List</h1>\n            <span className=\"mute\">\n              You have {this.props.users.length} team members\n            </span>\n          </header>\n        </Row>\n        <UserGrid />\n        <AddUser\n          show={this.props.show}\n          onHide={this.props.hideModal}\n          userId={this.props.users.length}\n        />\n        <EditUser\n          show={this.props.showEdit}\n          onHide={this.props.hideEditModal}\n          editedUser={this.props.editedUser}\n        />\n      </Container>\n    );\n  }\n}\n\nApp.propTypes = {\n  fetchUsers: PropTypes.func.isRequired,\n  users: PropTypes.array.isRequired,\n  showModal: PropTypes.func.isRequired,\n  show: PropTypes.bool.isRequired,\n  hideEditModal: PropTypes.func.isRequired,\n  showEdit: PropTypes.bool.isRequired,\n  showEditModal: PropTypes.func.isRequired,\n  editedUser: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => {\n  return {\n    users: state.users.userList,\n    show: state.show.show,\n    showEdit: state.show.showEdit,\n    editedUser: state.show.editedUser\n  };\n};\nexport default connect(\n  mapStateToProps,\n  { fetchUsers, showModal, showEditModal, hideEditModal }\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  FETCH_USERS,\r\n  NEW_USER,\r\n  EDIT_USER,\r\n  DELETE_USER\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  userList: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_USERS:\r\n      return {\r\n        ...state,\r\n        userList: action.payload\r\n      };\r\n    case NEW_USER:\r\n      return {\r\n        ...state,\r\n        userList: [...state.userList, action.payload]\r\n      };\r\n    case EDIT_USER:\r\n      let newList = state.userList.map(user => {\r\n        if (user.id === action.id) {\r\n          return Object.assign({}, user, action.payload);\r\n        } else {\r\n          return user;\r\n        }\r\n      });\r\n      //console.log(newList);\r\n      return {\r\n        ...state,\r\n        userList: newList\r\n      };\r\n    case DELETE_USER:\r\n      let updatedList = state.userList.filter(user => user.id !== action.id);\r\n      console.log(updatedList);\r\n      return {\r\n        ...state,\r\n        userList: updatedList\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  SHOW_MODAL,\r\n  HIDE_MODAL,\r\n  SHOW_EDIT_MODAL,\r\n  HIDE_EDIT_MODAL\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  show: false,\r\n  showEdit: false,\r\n  editedUser: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SHOW_MODAL:\r\n      return {\r\n        ...state,\r\n        show: action.payload\r\n      };\r\n    case HIDE_MODAL:\r\n      return {\r\n        ...state,\r\n        show: action.payload\r\n      };\r\n    case SHOW_EDIT_MODAL:\r\n      return {\r\n        ...state,\r\n        showEdit: action.payload,\r\n        editedUser: action.editedUser\r\n      };\r\n    case HIDE_EDIT_MODAL:\r\n      return {\r\n        ...state,\r\n        showEdit: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport userReducer from \"./userReducer\";\r\nimport modalReducer from \"./modalReducer\";\r\nexport default combineReducers({\r\n  users: userReducer,\r\n  show: modalReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\nimport data from \"./data.json\";\r\nconst middleware = [thunk];\r\nconst initialState = { userList: data };\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}